#+STARTUP: showall

#+TITLE:     6. Graphical Displays of Data
#+AUTHOR:    Paul Gribble
#+EMAIL:     paul@gribblelab.org
#+DATE:      fall 2014
#+OPTIONS: html:t num:t toc:1
#+LINK_UP: http://www.gribblelab.org/scicomp/index.html
#+LINK_HOME: http://www.gribblelab.org/scicomp/index.html

-----
[TABLE-OF-CONTENTS]
-----

MATLAB and R come with built-in functionality for producing graphical
displays of data. For Python there is a library called [[http://matplotlib.org][matplotlib]] that
provides MATLAB-like plotting capabilities. For C there is no easy
option, but the unix program [[http://www.gnuplot.info][gnuplot]] is probably the best option,
where you can pipe the output of a C program (or read a data file
generated by a C program) into gnuplot and generate plots.

In each language, graphics are generated not using a pointy-clicky GUI
but rather using a series of commands and functions (i.e. lines of
code). This may seem burdensome at first, but in the long run it will
make your life easier and you will have more power at your fingertips.

For example by saving the series of commands to generate a particular
figure, it makes it much easier in the future when you decide (or are
told) to modify the figure's appearance, and/or include new data,
etc. All you have to do is modify the code and re-run it and your
figure will be regenerated.

The other great advantage of generating figures using code is that you
can bundle the code for data analysis together with the code for
figure generation, and so other people (or yourself in the future) can
easily regenerate figures after modifications to the data.

* MATLAB
- MATLAB [[http://www.mathworks.com/help/matlab/creating_plots/using-high-level-plotting-functions.html][plotting functions]] 
- the [[http://www.mathworks.com/help/matlab/ref/plot.html][plot]] command
- [[http://www.mathworks.com/help/matlab/creating_plots/figures-plots-and-graphs.html#btjs9s4-1][types of MATLAB plots]] (gallery)

* Python
- Python [[http://matplotlib.org][matplotlib]] library
- [[http://matplotlib.org/gallery.html][matplotlib gallery]]

* R
- R plotting commands
- [[http://www.sr.bham.ac.uk/~ajrs/R/r-gallery.html][R graphics gallery]]
- [[http://ggplot2.org][ggplot2]] library

* C
- [[http://www.gnuplot.info][gnuplot]]
- [[http://www.gnuplot.info/screenshots/][gnuplot demo plots]]
- [[http://www.gnuplotting.org][gnuplotting]] blog/gallery

For your language(s) of choice, have a look at the documentation
above. In addition there are links to gallery pages showing a range of
different plot styles, and the code that was used to generate the
plots.

* Exercises

The best way to learn the various graphical commands is to write
code. Have a go at [[file:exercises.html][exercises]] 19 through xxx.
